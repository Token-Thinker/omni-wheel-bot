[package]
name = "omni-wheel"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"

resolver = "2"

[build-dependencies]
cfg-if = "1.0.0"

[features]
esp32 = ["esp-hal/esp32", "esp-hal-embassy/esp32", "esp-backtrace/esp32","esp-println/esp32", "esp-wifi/esp32"]
esp32c2 = []
esp32c3 = []
esp32c6 = []
esp32h2 = []
esp32s2 = []
esp32s3 = ["esp-hal/esp32s3", "esp-hal-embassy/esp32s3", "esp-backtrace/esp32s3","esp-println/esp32s3","esp-wifi/esp32s3"]

[dependencies]
cfg-if = "1.0.0"
embedded-alloc = { version = "0.6.0", features = ["allocator_api"] }
embedded-hal = { version = "1.0" }
embedded-hal-bus = { version = "0.3.0", features = ["async"] }
embedded-io-async = { version = "0.6" }
embassy-executor = { version = "0.7.0", features = ["task-arena-size-20480"] }
embassy-net = { version = "0.7.0", features = ["proto-ipv4", "tcp", "udp", "dhcpv4", "dhcpv4-hostname"] }
embassy-sync = { version = "0.6" }
embassy-time = { version = "0.4.0" }
esp-alloc = { version = "0.7.0" }
esp-backtrace = { version = "0.15.0", features = ["exception-handler", "println", "panic-handler"] }
esp-hal = { version = "1.0.0-beta.0", features = ["unstable", "psram"]}
esp-hal-embassy = { version = "0.7.0" }
esp-println = { version = "0.13.0", features = ["log"] }
esp-wifi = { version = "0.13.0", features = ["wifi"] }
hashbrown = { version = "0.15.2" }
heapless = "0.8.0"
icm42670 = { version = "0.2.0" }
lazy_static = { version = "1.5.0", features = ["spin_no_std"] }
libm = { version = "0.2.11" }
log = { version = "0.4" }
picoserve = { version = "0.16.0", features = ["embassy"] }
pwm-pca9685 = { version = "1.0.0" }
serde = { version = "1", default-features = false, features = ["derive"] }
serde_json = { version = "1", features = ["alloc"], default-features = false }
smart-leds-trait = { version = "0.3.0" }
static_cell = { version = "2.0", features = ["nightly"] }
tracing = { version = "0.1", default-features = false, features = ["log", "attributes"] }


[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units = 1        # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 's'
overflow-checks = false



